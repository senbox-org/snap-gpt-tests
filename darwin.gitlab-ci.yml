test_mac:
  tags:
   - mac
  stage: test
  rules:
    - if: $PLATFORM == 'darwin'
      when: always
    - when: never
  variables:
    SCOPE: daily
    SNAP_DIR: ~/Documents/snap
    TAG: master
    PROPERTIES_PATH: $CI_PROJECT_DIR/mac.conf
    SNAP_INSTALLER: snap_all_macos-pRC10.dmg
    TEST_DATA_LIST: singleTestData.txt
    MAVEN_CLI_OPTS: >-
      --no-transfer-progress
      --batch-mode
      --errors
      --fail-at-end
      --show-version
      -DdeployAtEnd=false
      -Dmaven.wagon.http.ssl.insecure=true
      -Dmaven.wagon.http.ssl.allowall=true
  before_script:
    # build project
    - mvn $MAVEN_CLI_OPTS package install
    - ls "${CI_PROJECT_DIR}/gpt-tests-executer/target"
    # Clean old report
    - rm -rf $REPORT_DIR
    - mkdir -p $TEST_DATA_DIR/$SCOPE $REPORT_DIR $REPORT_DIR/report $REPORT_DIR/report/output
    - python3 -m venv snap
    - source snap/bin/activate
    - pip3 install -r $CI_PROJECT_DIR/requirements.txt
    - pip3 install awscli
    # Produce a list of tests to run
    - python3 $CI_PROJECT_DIR/pygpt/filter_json.py gpt-tests-resources/tests $SCOPE $REPORT_DIR
    - cat $REPORT_DIR/testData.txt
    # Get test data for single test file
    - |
      export test=$(sed "${CI_NODE_INDEX}q;d" $REPORT_DIR/JSONTestFiles.txt)
      python3 $CI_PROJECT_DIR/pygpt/get_test_data_list.py $test $REPORT_DIR
    # Download test data
    - $CI_PROJECT_DIR/download_test_data.sh "${REPORT_DIR}" "${TEST_DATA_DIR}" "${TEST_DATA_LIST}" "${S3_BUCKET}" "${S3_ARGS}"
  script:
    - curl --progress-bar "https://nexus.snap-ci.ovh/repository/snap-maven-releases/org/esa/snap/installers-snapshot/snap_all_macos/pRC10/${SNAP_INSTALLER}" >> "${CI_PROJECT_DIR}/${SNAP_INSTALLER}"
    - chmod a+x ${CI_PROJECT_DIR}/${SNAP_INSTALLER} && xattr -dr com.apple.quarantine ${CI_PROJECT_DIR}/${SNAP_INSTALLER} && file ${CI_PROJECT_DIR}/${SNAP_INSTALLER}
    - ${CI_PROJECT_DIR}/${SNAP_INSTALLER} -q -dir ${CI_PROJECT_DIR}/snap -console -overwrite -Dinstall4j.debug=true && rm ${CI_PROJECT_DIR}/${SNAP_INSTALLER}
    - echo "Running $(sed "${CI_NODE_INDEX}q;d" ${REPORT_DIR}/JSONTestFiles.txt)"
    - |
      export FILE=$(sed "${CI_NODE_INDEX}q;d" $REPORT_DIR/JSONTestFiles.txt)
      python3 pygpt/snap_gpt_test.py java "${JAVA_OPTIONS} -cp ${CI_PROJECT_DIR}/gpt-tests-executer/target/gpt-test-exec.jar" \
        org.esa.snap.test.TestOutput $PROPERTIES_PATH $SCOPE $FILE $REPORT_DIR/report/output true
  after_script:
    # Copy assets for report generation
    - cp -rf $REPORT_DIR/report/output/* $REPORT_DIR/report
    - cp -rf pygpt/statics/* $REPORT_DIR/report
    - echo "Generate report"
    - python3 pygpt/report_utils.py pygpt/templates $REPORT_DIR/report $SCOPE snap:master
  artifacts:
    when: always
    expire_in: "3 days"
    paths:
      - "${REPORT_DIR}/report"
  allow_failure: true


pages:
  stage: report
  tags:
    - mac
  rules:
    - if: $PLATFORM == 'darwin'
      when: always
    - when: never
  cache: []
  variables:
    # output upload and download progress every 2 seconds
    TRANSFER_METER_FREQUENCY: "2s"
    # Use fast compression for artifacts, resulting in larger archives
    ARTIFACT_COMPRESSION_LEVEL: "fast"
    # Use no compression for caches
    CACHE_COMPRESSION_LEVEL: "fastest"
    # Set maximum duration of cache upload and download
    CACHE_REQUEST_TIMEOUT: 5
  before_script:
    - pip3 install -r $CI_PROJECT_DIR/requirements.txt
  script:
    - echo "Copy assets for report generation in result/report"
    - ls result/report/output/
    - cp -rf result/report/output/* result/report
    - cp -rf pygpt/statics/* result/report
    - ls result/report
    - echo "Generate report"
    - python3 pygpt/report_utils.py pygpt/templates result/report $SCOPE snap:master
    - mv result/report public/macos
  artifacts:
    expire_in: 1 week
    paths:
      - public/macos
  publish: public/macos
