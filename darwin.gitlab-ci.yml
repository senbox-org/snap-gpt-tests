test_mac:
  tags:
   - mac
  stage: test
    # rules:
    # - if: $CI_COMMIT_TAG
    #   variables:
    #     DL_URL: https://nexus.snap-ci.ovh/repository/snap-maven-releases/org/esa/snap/installers/snap_all_macos/RC20/snap_all_macos.dmg
  variables:
    SCOPE: daily
    SNAP_DIR: /Users/otb/Applications/snap
    REPORT_DIR: ./result
    TAG: master
    PROPERTIES_PATH: $CI_PROJECT_DIR/mac.conf
    SNAP_INSTALLER: snap_all_macos_archive-$VERSION.dmg
    TEST_DATA_LIST: singleTestData.txt
    TEST_DATA_DIR: "/Volumes/snap-ext/SNAP/testData"
    JAVA_HOME: /Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home
    MAVEN_CLI_OPTS: >-
      --no-transfer-progress
      --batch-mode
      --errors
      --fail-at-end
      --show-version
      -DdeployAtEnd=false
      -Dmaven.wagon.http.ssl.insecure=true
      -Dmaven.wagon.http.ssl.allowall=true
    DL_URL: "https://nexus.snap-ci.ovh/repository/snap-maven-releases/org/esa/snap/installers-snapshot/snap_all_macos_archive/${VERSION}/snap_all_macos_archive-$VERSION.dmg"
  before_script:
    - mvn $MAVEN_CLI_OPTS package install
    - ls "${CI_PROJECT_DIR}/gpt-tests-executer/target"
    - rm -rf $REPORT_DIR
    - mkdir -p $TEST_DATA_DIR/$SCOPE $REPORT_DIR $REPORT_DIR/report $REPORT_DIR/report/output
    - python3 -m venv snap
    - source snap/bin/activate
    - pip3 install -r $CI_PROJECT_DIR/requirements.txt
    - curl --progress-bar "${DL_URL}" >> "${CI_PROJECT_DIR}/${SNAP_INSTALLER}"
    - hdiutil attach ${CI_PROJECT_DIR}/${SNAP_INSTALLER}
    - 'INSTALL4J_LOG=yes "/Volumes/esa-snap/ESA SNAP.app/Contents/MacOS/JavaApplicationStub" -dir ${SNAP_DIR} -q -console -overwrite -Dsnap.mainClass=org.esa.snap.main.Main'
    # - rm -rf $SNAP_DIR && ls /Volumes/esa-snap
    # - cp -rf "/Volumes/esa-snap/ESA SNAP.app/Contents/Resources/app" $SNAP_DIR && ls $SNAP_DIR
    - ls $SNAP_DIR/bin
    - python3 $CI_PROJECT_DIR/pygpt/filter_json.py gpt-tests-resources/tests $SCOPE $REPORT_DIR
  script:
    - $CI_PROJECT_DIR/prepare.sh "${REPORT_DIR}" "${TEST_DATA_DIR}" "${TEST_DATA_LIST}" "${S3_BUCKET}" "${S3_ARGS}" "${CI_PROJECT_DIR}"
  after_script:
    - hdiutil detach /dev/disk3
  artifacts:
    when: always
    expire_in: "3 days"
    paths:
      - "${REPORT_DIR}/report"

report:
  stage: report
  tags:
    - mac
  rules:
    - if: $SCOPE != 'CItest'
    - if: $CI_COMMIT_BRANCH == 'master'
      variables:
        VERSION: snap:master
    - if: $CI_COMMIT_TAG
      variables:
        VERSION: snap:$CI_COMMIT_TAG
  cache: []
  variables:
    # output upload and download progress every 2 seconds
    TRANSFER_METER_FREQUENCY: "2s"
    # Use fast compression for artifacts, resulting in larger archives
    ARTIFACT_COMPRESSION_LEVEL: "fast"
    # Use no compression for caches
    CACHE_COMPRESSION_LEVEL: "fastest"
    # Set maximum duration of cache upload and download
    CACHE_REQUEST_TIMEOUT: 5
  before_script:
    - pip3 install -r $CI_PROJECT_DIR/requirements.txt
  script:
    - echo "Copy assets for report generation in result/report"
    - ls result/report/output/
    - cp -rf result/report/output/* result/report
    - cp -rf pygpt/statics/* result/report
    - ls result/report
    - echo "Generate report"
    - python3 pygpt/report_utils.py pygpt/templates result/report $SCOPE snap:master
    # Upload to s3
    - aws s3 rm "s3://${S3_REPORTS}/release/macos" --recursive --endpoint-url https://s3.sbg.io.cloud.ovh.net --region sbg
    - aws s3 sync result/report "s3://${S3_REPORTS}/macos" --endpoint-url https://s3.sbg.io.cloud.ovh.net --region sbg --acl public-read
  artifacts:
    expire_in: 1 day
    paths:
      - result/report
